@page "/AddNewProduct"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims

<h3>AddNewProduct</h3>

<EditForm Model="newProduct" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group mb-3">
        <label for="productName">Product Name</label>
        <InputText id="productName" @bind-Value="newProduct.Name" class="form-control" placeholder="Enter product name" />
        <ValidationMessage For="@(() => newProduct.Name)" />
    </div>
    <div class="form-group mb-3">
        <label for="productPrice">Product Price</label>
        <InputNumber id="productPrice" @bind-Value="newProduct.Price" class="form-control" placeholder="Enter product price" />
        <ValidationMessage For="@(() => newProduct.Price)" />
    </div>
    <button type="submit" class="btn btn-primary">Add Product</button>
</EditForm>

@code {
    private Product newProduct = new Product();

    private async Task HandleValidSubmit()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var response = await Http.PostAsJsonAsync($"{Endpoints.ProductsEndpoint}", newProduct);
            if (response.IsSuccessStatusCode)
            {
                newProduct = new Product();
            }
        }
    }
}